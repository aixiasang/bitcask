// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/hint": {
            "post": {
                "description": "生成hint文件，加速下次启动",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "生成hint文件",
                "responses": {
                    "200": {
                        "description": "生成hint文件成功",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "生成hint文件失败",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/merge": {
            "post": {
                "description": "合并数据文件，删除过时记录",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "执行合并操作",
                "responses": {
                    "200": {
                        "description": "合并成功",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "合并失败",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/keys": {
            "get": {
                "description": "获取系统中所有键值对",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "列出所有键值对",
                "responses": {
                    "200": {
                        "description": "键值对列表",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/http.KVPair"
                            }
                        }
                    },
                    "500": {
                        "description": "扫描失败",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/keys/range/{start}/{end}": {
            "get": {
                "description": "查询指定键范围内的键值对",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "范围查询键值对",
                "parameters": [
                    {
                        "type": "string",
                        "description": "起始键",
                        "name": "start",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "结束键",
                        "name": "end",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "最大返回数量",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "范围内的键值对",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/http.RangeQueryResult"
                            }
                        }
                    },
                    "500": {
                        "description": "范围扫描失败",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/keys/{key}": {
            "get": {
                "description": "获取存储在系统中的指定key的值",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "获取指定key的值",
                "parameters": [
                    {
                        "type": "string",
                        "description": "查询的键名",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "键值内容",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "获取值失败",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "存储或更新键值对",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "设置key的值",
                "parameters": [
                    {
                        "type": "string",
                        "description": "设置的键名",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "存储的值",
                        "name": "value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "存储成功",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "存储失败",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "从系统中删除指定的键值对",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "删除指定key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "要删除的键名",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "删除成功",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "删除失败",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.KVPair": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "http.RangeQueryResult": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Bitcask API",
	Description:      "Bitcask的RESTful API服务",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	// LeftDelim:        "{{",
	// RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
